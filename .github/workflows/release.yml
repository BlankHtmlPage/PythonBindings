# .github/workflows/release.yml

name: Build and Release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (e.g., v1.0.0 or "Beta Build")'
        required: true
        default: 'Untitled Release'
        type: string
      release_notes:
        description: 'Release notes/body (Markdown supported)'
        required: false
        default: ''
        type: multiline
      pre_release:
        description: 'Mark as pre-release?'
        required: false
        default: false
        type: boolean

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: x86_64-pc-windows-msvc
        components: rustfmt, clippy

    - name: Run cargo check
      run: cargo check

    - name: Run cargo test
      run: cargo test

    - name: Run cargo build (release)
      run: cargo build --release --locked

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: FlurionsPythonBindings-${{ github.run_id }}  # Unique name per run
        path: |
          target/release/FlurionsPythonBindings.exe
          Cargo.lock
        retention-days: 90  # Keep artifacts for 90 days

    - name: Create Release (only on manual dispatch)
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.release_name }}
        name: ${{ github.event.inputs.release_name }}
        body: ${{ github.event.inputs.release_notes }}
        files: target/release/FlurionsPythonBindings.exe
        generate_release_notes: false
        draft: false
        prerelease: ${{ github.event.inputs.pre_release }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  ci:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build
    steps:
    - name: Notify CI Success
      run: echo "CI build successful on branch ${{ github.ref_name }} - Artifacts uploaded and ready for download"